volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_media: {}
  production_tmp: {}
  production_staticfiles: {}

version: "3.8"

services:
  fastapi-app:
    build:
      context: .
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    command: sh -c "echo $POSTGRES_USER $POSTGRES_PASSWORD $POSTGRES_DB $POSTGRES_HOST $POSTGRES_PORT && gunicorn -w 4 -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 user_registration:app"

  # postgres:
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: dvu_production_postgres
    network_mode: bridge
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres
    ports:
      - "5432:5432"
    command: postgres -c 'max_connections=1000'







 


